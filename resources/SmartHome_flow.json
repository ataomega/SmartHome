[
   {
      "id":"e54c946f.c292b8",
      "type":"tab",
      "label":"Flow 1"
   },
   {
      "id":"efa8cbd7.043e38",
      "type":"ui_tab",
      "z":"",
      "name":"Home",
      "icon":"dashboard"
   },
   {
      "id":"b6e4d608.820308",
      "type":"ui_group",
      "z":"",
      "name":"All switches",
      "tab":"efa8cbd7.043e38",
      "disp":true,
      "width":"12"
   },
   {
      "id":"390168d6.a4fe08",
      "type":"ui_group",
      "z":"",
      "name":"Add new switch",
      "tab":"efa8cbd7.043e38",
      "disp":true,
      "width":"6"
   },
   {
      "id":"b8c4c5d9.9b3fe8",
      "type":"websocket-client",
      "z":"",
      "path":"ws://osmc:4050",
      "wholemsg":"false"
   },
   {
      "id":"39d3eda9.8d7c32",
      "type":"websocket-client",
      "z":"",
      "path":"ws://127.0.0.1:4050",
      "wholemsg":"false"
   },
   {
      "id":"e1b9fb67.992af8",
      "type":"ui_base",
      "theme":{
         "name":"theme-dark",
         "lightTheme":{
            "default":"#0094CE",
            "baseColor":"#0094CE",
            "baseFont":"Helvetica Neue",
            "edited":true,
            "reset":false
         },
         "darkTheme":{
            "default":"#097479",
            "baseColor":"#097479",
            "baseFont":"Helvetica Neue",
            "edited":true,
            "reset":false
         },
         "customTheme":{
            "name":"Untitled Theme 1",
            "default":"#4B7930",
            "baseColor":"#4B7930",
            "baseFont":"Helvetica Neue"
         },
         "themeState":{
            "base-color":{
               "default":"#097479",
               "value":"#097479",
               "edited":false
            },
            "page-titlebar-backgroundColor":{
               "value":"#097479",
               "edited":false
            },
            "page-backgroundColor":{
               "value":"#111111",
               "edited":false
            },
            "page-sidebar-backgroundColor":{
               "value":"#000000",
               "edited":false
            },
            "group-textColor":{
               "value":"#0eb8c0",
               "edited":false
            },
            "group-borderColor":{
               "value":"#555555",
               "edited":false
            },
            "group-backgroundColor":{
               "value":"#333333",
               "edited":false
            },
            "widget-textColor":{
               "value":"#eeeeee",
               "edited":false
            },
            "widget-backgroundColor":{
               "value":"#097479",
               "edited":false
            },
            "widget-borderColor":{
               "value":"#333333",
               "edited":false
            }
         }
      },
      "site":{
         "name":"Node-RED Dashboard",
         "hideToolbar":"false",
         "allowSwipe":"false",
         "dateFormat":"DD/MM/YYYY",
         "sizes":{
            "sx":48,
            "sy":48,
            "gx":6,
            "gy":6,
            "cx":6,
            "cy":6,
            "px":0,
            "py":0
         }
      }
   },
   {
      "id":"95159855.715968",
      "type":"function",
      "z":"e54c946f.c292b8",
      "name":"Need render",
      "func":"var switches = context.global.persist.getItemSync('switches') || []\n\nvar switchesLocal = flow.get('switches') || [];\n\n\nif(!this.RED.util.compareObjects(switches, switchesLocal)) {\n    node.send({\n        payload: switches\n    })\n    \n    flow.set('switches', JSON.parse(JSON.stringify(switches)))\n    \n    switchesLocal.forEach(a => {\n        var s = switches.filter(b => (a.address === b.address && a.on != b.on))[0]\n        if(!s)\n            return\n            \n        var gr = s.address.split('-')[0]\n        var ad = parseInt(s.address.split('-')[1])\n        \n        if(s.on)\n            context.global.rcswitch.switchOn(gr, ad)\n        else\n            context.global.rcswitch.switchOff(gr, ad)\n    })\n}\n\nreturn",
      "outputs":1,
      "noerr":0,
      "x":250,
      "y":180,
      "wires":[
         [
            "292fb1b.2e3494e"
         ]
      ]
   },
   {
      "id":"292fb1b.2e3494e",
      "type":"ui_template",
      "z":"e54c946f.c292b8",
      "group":"b6e4d608.820308",
      "name":"",
      "order":0,
      "width":"12",
      "height":"8",
      "format":"<head>\n<!--<link href=\"https://cdn.rawgit.com/twbs/bootstrap/v4-dev/dist/css/bootstrap.min.css\" rel=\"stylesheet\">     -->\n<link href=\"https://opensource.keycdn.com/fontawesome/4.7.0/font-awesome.min.css\" rel=\"stylesheet\">\n</head>\n<body>\n  <div>\n    <div href=\"#\" style=\"padding: 0px; width: 28%; margin: 1%; float: left;\" class=\"card\" ng-repeat=\"switch in msg.payload\">\n      <div>\n        <md-button class=\"md-raised md-primary md-hue-1\" style=\"background-color: {{switch.on !== true ? 'lightcyan' : 'lightgoldenrodyellow'}}; width: 100%; height: 70px; margin: 0px\" ng-click=\"send({payload: {address: switch.address, value: !switch.on, action: 'status'}})\">{{switch.name}}<br>@: {{switch.address}}</md-button>\n      </div>\n      <div>\n        <span class=\"button-group input-block-level\">\n          <md-button class=\"md-accent md-raised md-hue-2\" style=\"width: 48%; height: 30px; margin: 0px\" ng-click=\"send({payload: {address: switch.address, action: 'delete'}})\"><span class=\"fa fa-times\" aria-hidden=\"true\"></span></md-button>\n        </span>\n      </div>\n    </div>\n  </div>\n</body>",
      "storeOutMessages":false,
      "fwdInMessages":false,
      "x":200,
      "y":100,
      "wires":[
         [
            "acfe5ef0.93355"
         ]
      ]
   },
   {
      "id":"acfe5ef0.93355",
      "type":"function",
      "z":"e54c946f.c292b8",
      "name":"Parser",
      "func":"var ret\n\nvar switches = context.global.persist.getItemSync('switches')||[];\n\n\nvar selected = switches.filter(a => a.address === msg.payload.address)[0]\n\nswitch(msg.payload.action) {\n    case 'status':\n        switches = switches.map(a => {\n            if(a.address != msg.payload.address) return a\n            a.on = msg.payload.value\n            return a\n        })\n        ret = {\n            payload: {\n                topic: 'set',\n                payload: {\n                    name: selected.name,\n                    characteristic: \"On\", \n                    value: msg.payload.value\n                }\n            }\n        }\n        break;\n    case 'delete':\n        switches = switches.filter(a => a.address != msg.payload.address)\n        ret = {\n            payload: {\n                topic: 'remove',\n                payload: {\n                    name: selected.name,\n                    service: 'switch'\n                }\n            }\n        }\n        break;\n}\n\ncontext.global.persist.setItemSync('switches', switches)\n\nreturn ret",
      "outputs":1,
      "noerr":0,
      "x":350,
      "y":100,
      "wires":[
         [
            "6ee68d28.03ca34"
         ]
      ]
   },
   {
      "id":"be92a08c.8ed2a",
      "type":"function",
      "z":"e54c946f.c292b8",
      "name":"Add switch",
      "func":"var switches = context.global.persist.getItemSync('switches') || [];\n\nvar parts = msg.payload.address.split('-')\n\nif(!parts[0] || !parts[1] || !parseInt(parts[0]) || !parseInt(parts[1]))\n    return [null, {\n        payload: 'wrong address format: please follow \"group\"-\"address\" format, ex: 10110-1'\n    }]\n\n\nmsg.payload.on = false\nswitches.push(msg.payload)\n\ncontext.global.persist.setItemSync('switches', switches)\n\nreturn [{\n    payload: {\n        topic: 'add',\n        payload: {\n            name: msg.payload.name,\n            service: 'Lightbulb'\n        }\n    }\n}, null]",
      "outputs":"2",
      "noerr":0,
      "x":250,
      "y":260,
      "wires":[
         [
            "940fdbec.54c978"
         ],
         [
            "b69d8fb3.cb466"
         ]
      ]
   },
   {
      "id":"20846aa2.6219a6",
      "type":"inject",
      "z":"e54c946f.c292b8",
      "name":"r",
      "topic":"",
      "payload":"",
      "payloadType":"date",
      "repeat":".2",
      "crontab":"",
      "once":false,
      "x":110,
      "y":180,
      "wires":[
         [
            "95159855.715968"
         ]
      ]
   },
   {
      "id":"2d9133e9.1fe62c",
      "type":"ui_form",
      "z":"e54c946f.c292b8",
      "name":"",
      "label":"",
      "group":"390168d6.a4fe08",
      "order":0,
      "width":0,
      "height":0,
      "options":[
         {
            "label":"Name",
            "value":"name",
            "type":"text",
            "required":true
         },
         {
            "label":"Address",
            "value":"address",
            "type":"text",
            "required":true
         }
      ],
      "formValue":{
         "name":"",
         "address":""
      },
      "payload":"",
      "topic":"",
      "x":110,
      "y":260,
      "wires":[
         [
            "be92a08c.8ed2a"
         ]
      ]
   },
   {
      "id":"180694e1.6d5e4b",
      "type":"websocket out",
      "z":"e54c946f.c292b8",
      "name":"outgoing-home-bridge-ws",
      "server":"",
      "client":"39d3eda9.8d7c32",
      "x":360,
      "y":500,
      "wires":[

      ]
   },
   {
      "id":"620a5679.d7a2f8",
      "type":"websocket in",
      "z":"e54c946f.c292b8",
      "name":"incoming-home-bridge-ws",
      "server":"",
      "client":"39d3eda9.8d7c32",
      "x":170,
      "y":420,
      "wires":[
         [
            "7cfb3e6.f52b3c"
         ]
      ]
   },
   {
      "id":"7cfb3e6.f52b3c",
      "type":"function",
      "z":"e54c946f.c292b8",
      "name":"",
      "func":"\nmsg.payload = JSON.parse(msg.payload)\n\n\nif (!msg.payload || !msg.payload.payload || !msg.payload.payload.name)\n  return\n  \nvar switches = context.global.persist.getItemSync('switches')||[];\n\n  \nvar name = msg.payload.payload.name\n\nswitches = switches.map(a => {\n    if(a.name != name || typeof msg.payload.payload.value === 'undefined') return a\n    a.on = msg.payload.payload.value\n    return a\n})\n\ncontext.global.persist.setItemSync('switches', switches)\nvar selected = switches.filter(a => a.name === name)[0] || {}\n\nreturn {\n    payload: {\n        topic: \"callback\",\n        payload: {\n            name: name, \n            characteristic: \"On\", \n            value: selected.on || false\n        }\n    }\n};\n",
      "outputs":1,
      "noerr":0,
      "x":370,
      "y":420,
      "wires":[
         [
            "98cad6d.a29ef28"
         ]
      ]
   },
   {
      "id":"b4f2a61d.d9c308",
      "type":"link in",
      "z":"e54c946f.c292b8",
      "name":"",
      "links":[
         "940fdbec.54c978",
         "6ee68d28.03ca34",
         "98cad6d.a29ef28"
      ],
      "x":75,
      "y":500,
      "wires":[
         [
            "180694e1.6d5e4b"
         ]
      ]
   },
   {
      "id":"940fdbec.54c978",
      "type":"link out",
      "z":"e54c946f.c292b8",
      "name":"",
      "links":[
         "b4f2a61d.d9c308"
      ],
      "x":475,
      "y":240,
      "wires":[

      ]
   },
   {
      "id":"6ee68d28.03ca34",
      "type":"link out",
      "z":"e54c946f.c292b8",
      "name":"",
      "links":[
         "b4f2a61d.d9c308"
      ],
      "x":475,
      "y":100,
      "wires":[

      ]
   },
   {
      "id":"98cad6d.a29ef28",
      "type":"link out",
      "z":"e54c946f.c292b8",
      "name":"",
      "links":[
         "b4f2a61d.d9c308"
      ],
      "x":475,
      "y":420,
      "wires":[

      ]
   },
   {
      "id":"b69d8fb3.cb466",
      "type":"ui_toast",
      "z":"e54c946f.c292b8",
      "position":"top right",
      "displayTime":"3",
      "outputs":0,
      "ok":"OK",
      "cancel":"",
      "topic":"",
      "name":"",
      "x":390,
      "y":340,
      "wires":[

      ]
   }
]
